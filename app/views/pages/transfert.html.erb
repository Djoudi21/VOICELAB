<body class="body">
  <div class="custom-body">
    <div class="hero-log blue-bg">
      <div class="w-container">
        <div class="hero-usecase--text-left">
          <%= image_tag("cfakepathlogo-blanc-530.png", height: 30, class: "image-11") %>
          <div class="sizejumbo-text sizejumbo-top-clear usecase-title"><strong>Participez</strong> √† La recherche sur l&#x27;iA ET les donn√©es vocales, la recherche Fran√ßaise est en retard.</div>
          <div class="lnd_details">Vous souhaitez r√©cup√©rer vos donn√©es? <br>
            Lisez les instructions ci-dessous.
          </div>
          <div class="fe03_container">
            <div class="fe03_card">
              <h3 class="title-h3">üíæ 1. O√π importer ?</h3>
              <p class="paragraph-alias">Choisissez le service de stockage vers lequel vous d√©sirez importer vos donn√©es.</p>
            </div>
            <div class="fe03_card">
              <h3 class="title-h3">üîå 2. Contrat Voicelab</h3>
              <p class="paragraph-alias">Remplissez le contrat d'autorisation d'acc√®s √† vos donn√©es par Voicelab.</p>
            </div>
            <div class="fe03_card">
              <h3 class="title-h3">ü•∞ 3. Acc√®s √† vos donn√©es</h3>
              <p class="paragraph-alias">Une vid√©o explicative vous montrera comment r√©clamer vos donn√©es via l'interface Google.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div>
      <div class="container padding-40 pt-80 w-container">
        <div class="cta07_main_wrap">
          <h3>1.¬†Connectez-vous a votre lieu de stockage</h3>
          <p class="paragraph-alias">Veuillez selectioner votre lieu de stockage</p>
        </div>
        <div class="cta07_button_wrap">
          <%= link_to('/api/storage/gdrive/link?redirect=https%3A%2F%2Fvoicelabs.gdpr.dev%2Ftransfert%2F', class: 'btn') do %>
            <div class="icons8-google-drive"></div>
          <% end %>
          <%= button_tag('', disabled: true, class: 'btn btn-disabled') do %>
            <div class="icons8-dropbox"></div>
          <% end %>
        </div>
      </div>
    </div>
    <div>
      <div class="container padding-40 w-container">
        <div class="form-access w-form">
          <div class="cta07_main_wrap">
            <h3>2. Contrat d'autorisation d'acc√®s √† votre compte Google Drive par Voicelab</h3>
            <div id="popup">
              <div id="popup-content">
                <p class="title">üîí <em>{{ c.client.body.name }}</em>, de <em>{{ c.client.body.company }}</em>, d√©sire acc√©der √† vos donn√©es.</p>
                <div v-if="hasContractual" class="indent">
                  <p>Cette application acc√®dera aux donn√©es suivantes:</p>
                  <ul>
                    <li v-for="scope in c.base.contractual.scopes"><alias-scope :value="scope" /></li>
                    </ul>
                    <p>Ces donn√©es seront utilis√©es pour les raisons suivantes<span v-if="c.base.contractual.usages.length>1">s</span>:</p>
                    <ul>
                      <li v-for="usage in c.base.contractual.usages">{{ usage }}</code></li>
                  </ul>
                </div>
                <div v-if="hasConsent">
                  <div v-for="consent in c.base.consent" class="indent">
                    <p>Cette application souhaite avoir votre consentement pour acc√©der aux donn√©es suivantes:</p>
                    <ul>
                      <li v-for="(scope, i) in consent.scopes">
                        Consentez-vous √©galement √† partager ce type de donn√©es <alias-scope :value="scope"></alias-scope>?
                        <input type="radio" v-model="scope.agree" :value="true">Oui
                        <input type="radio" v-model="scope.agree" :value="false">Non
                      </li>
                    </ul>
                    <p>Ces donn√©es seront utilis√©es pour la raison suivante<span v-if="consent.usages.length>1">s</span>:</p>
                    <ul>
                      <li v-for="usage in consent.usages">{{ usage }}</code></li>
                  </ul>
                </div>
              </div>
              <div v-if="hasLegitimate" class="indent">
                <p>Cette application recquiert l'acc√®s √† vos donn√©es legitimes por la raison suivante:</p>
                <p>{{ c.base.legitimate.reason }}</p>
                <div v-for="legitimate in c.base.legitimate.groups" class="indent">
                  <p>Cette application demande l'acc√®s aux donn√©es suivantes:</p>
                  <ul>
                    <li v-for="scope in legitimate.scopes"><alias-scope :value="scope" /></li>
                    </ul>
                    <p>Ces donn√©es seront utilis√©es pour la raison suivante<span v-if="legitimate.usages.length>1">s</span>:</p>
                    <ul>
                      <li v-for="usage in legitimate.usages">{{ usage }}</code></li>
                  </ul>
                </div>
              </div>
              <p>Vos donn√©es:</p>
              <ul>
                <li>
                  <verb :value="true">seront</verb> paratag√©es avec <em>{{c.client.body.name}}</em>
                  <span v-if="c.legal && c.legal.destination">
                    et <em v-for="(t, idx) in c.legal.destination">{{t}}<span v-if="idx+1 < c.legal.destination.length">, </span></em></span>;
                </li>
                <li>
                  <verb :value="c.legal.transfer_outside_eea">ne seront pas</verb> transfer√©es en dehors de L'Union Europ√©enne(UE);
                </li>
                <li>
                  <verb :value="c.legal.evaluation_notation_rating_profiling">ne seront pas</verb> utilis√©es pour l'√©valuation, la notation, ou pour profilages;
                </li>
                <li>
                  <verb :value="c.legal.automated_decision">ne seront pas</verb> utilis√©es pour g√©n√©rer une d√©cision automatique vous concernant;
                </li>
                <li>
                  <verb :value="c.legal.automated_surveillance">ne seront pas</verb> utilis√©es pour une surveillance auotmatique;
                </li>
                <li>
                  <verb :value="c.legal.mixing_reasonable_expectations">ne seront pas</verb> crossed or mixed beyond reasonnable expectations;
                </li>
                <li>
                  <verb :value="c.legal.innovative_reasonable_expectations">ne seront pas</verb> utilis√©es de fa√ßon innovante ou avec des technologies innovantes ou des systemes organisationnels innovants au dela d'attentes raisonnables;
                </li>
              </ul>
              <p>Vos donn√©es seront stock√©es pour une dur√©e de<em>{{c.legal.storage_duration}}</em>.</p>
              <p>
                <a v-if="c.legal.tos_url" :href="c.legal.tos_url" target="_blank">Privacy policy</a> - <a :href="'mail:' + c.legal.email_dpo">Contacter le DPO</a>
              </p>
              <p>Vous avez le droit d'acc√©der, de modifier, transferer ou supprimer les donn√©es que vous avez collect√© comme la loi vous y autorise.</p>
              <button v-on:click="agree">J'accepte</button>
              <button v-on:click="deny">Je refuse</button>
              <p><a href="#" id="advanced" v-on:click="toggleAdvanced">Advanced</a></p>
              <div id="advanced-info" v-show="showAdvanced">
                <p>
                  Request date: <code>{{c.client.date}}</code>
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div class="container padding-40 w-container">
      <div class="form-access w-form">
        <div class="cta07_main_wrap">
          <h3>4. Validez votre demande</h3>
        </div>
        <iframe
              width="560"
              height="315"
              src="https://www.youtube.com/embed/YNpERzRABNY"
              frameborder="0"
              allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen>
        </iframe>
        <div class="card-block-single padding">
          <%= link_to 'Obtenir mes donn√©es', "https://takeout.google.com/settings/takeout?pli=1", class: "bt-data-copy noline blue w-button" %>
        </div>
      </div>
    </div>
  </div>
  <div class="section-large---inner blue">
    <div class="cta01_bar">
      <div class="cta01_text_wrap">
        <div class="cta01_text">Regardez votre bo√Æte email et ouvrez notre email pour la r√©ception de vos donn√©es.</div>
      </div>
    </div>
    <div class="cta01_container">
      <h2 class="cta01_h2-2">Ouvrir mon application de messagerie</h2>
      <div class="div-img-tab">
        <%= link_to ('https://mail.google.com/mail/u/0/') do %>
          <%= image_tag ('icon-gmail.png') %>
        <% end %>
        <%= link_to ('https://outlook.live.com/') do %>
          <%= image_tag ('icon-hotmail.png') %>
        <% end %>
        <%= link_to ('https://login.yahoo.com') do %>
          <%= image_tag ('icon-yahoo.png') %>
        <% end %>
      </div>
    </div>
  </div>
</div>
<!-- <script type="application/javascript" src="/assets/javascript/plugins/request.js"></script>
 -->
<script>
  // let tata = {"type":"alias.contract","client":{"type":"anychain.signature","date":"Mon, 23 Sep 2019 21:20:23 GMT","signer":{"_bytes":"5HfQie9XLS_WSg3qHAO0nID2NELhxsW6Y0FVsPEPA6k"},"body":{"type":"alias.client.decl","crypto":{"sign":{"bytes":"5HfQie9XLS_WSg3qHAO0nID2NELhxsW6Y0FVsPEPA6k"},"box":{"bytes":"rYCKMvxV5fBt82dL17-cnOIppFv29ArnAXiJEhKQbBg"}},"name":"Voice Labs","desc":"Teach machines how human talks","domain":"demo.gdpr.dev","company":"Voice Labs Inc"},"signature":{"_bytes":"jl-pIUk5o0eQSSY7l4eeokTCx_w3wXPDvItkJKZ3bm5RMc41GBu_Tm8Ywx_SLbcTAHXNmWC8GiGOcp2hr96vBA"}},"legal":{"accept_users_right_access_modify_transfer_delete":true,"automated_decision":false,"automated_surveillance":false,"destination":["Snips Inc","Voxist","Voicelow","Roger Voice"],"email_dpo":"dpo@voicelabs.co","evaluation_notation_rating_profiling":false,"innovative_reasonable_expectations":false,"mixing_reasonable_expectations":false,"storage_duration":"2 years after your Voice Labs account is closed","subprocessors":[],"tos_url":"https://voicelabs.co/tos/","transfer_outside_eea":false,"usage":"(global) Manipulate your Audio recordings lol"},"base":{"consent":[{"scopes":[{"provider":"google","path":"my_activity.assistant"},{"provider":"amazon","path":"alexa"}],"usages":["Train our Speech-to-Text algorithm"]}],"contractual": {"scopes": [{"provider": "google", "path": "my_account.email"}], "usages": ["To keep communication"]}, "legitimate": {"groups": [{"scopes": [{"provider": "google", "path": "my_account.connection_history"}], "usages": ["Detect fraudulent activity"]}], "reason": "For satefy reasons"}}, "network":{"redirectEndpoint": "/cb/"}};
  
  Vue.component('verb', {
      props: ['value'],
      data: () => { return {}; },
      template: `
  <span v-if="value"><b style="text-transform: uppercase;"><slot></slot></b></span><span v-else-if="!value"><b style="text-transform: uppercase;"><slot></slot> NOT</b></span>
  `,
  });
  
  var vue = null;
  
  function deepcloneJSON(x) {
      return JSON.parse(JSON.stringify(x));
  }
  
  function getContractCallbackURL(contract) {
      const network = contract.network || {};
      const scheme = network.scheme || "https";
      const domain = contract.client.body.domain;
      const endpoint = network.redirectEndpoint || "/alias/cb/";
      if (endpoint.charAt(0) != "/") { throw "bad endpoint"; }
      const url = `${scheme}://${domain}${endpoint}`;
      return url;
  }
  
  function cbReturnError(contract, error, desc, uri) {
      const state = (new URL(window.location.href)).searchParams.get('state');
  
      let url = getContractCallbackURL(contract) + "?";
      url = url + "error=" + encodeURIComponent(error);
      if (desc)  url = url + "&error_description=" + encodeURIComponent(desc);
      if (uri)   url = url + "&error_uri=" + encodeURIComponent(uri);
      if (state) url = url + "&state=" + encodeURIComponent(state);
  
      window.location.href = url;
  }
  
  function cbReturn(contract, grant, bind) {
      const state = (new URL(window.location.href)).searchParams.get('state');
  
      let url = getContractCallbackURL(contract) + "?";
      url = url + "code=" + encodeURIComponent(chain.toToken(grant));
      url = url + "&bind=" + encodeURIComponent(chain.toToken(bind));
      if (state) url = url + "&state=" + encodeURIComponent(state);
  
      //console.log("redirect to", url);
      window.location.href = url;
  }
  
  async function run() {
      await authed();
  
      let contractVoicelab = {"type":"alias.contract","client":{"type":"anychain.signature","date":"Mon, 23 Sep 2019 21:20:23 GMT","signer":{"__bytes":"5HfQie9XLS_WSg3qHAO0nID2NELhxsW6Y0FVsPEPA6k"},"body":{"type":"alias.client.decl","crypto":{"sign":{"__bytes":"5HfQie9XLS_WSg3qHAO0nID2NELhxsW6Y0FVsPEPA6k"},"box":{"__bytes":"rYCKMvxV5fBt82dL17-cnOIppFv29ArnAXiJEhKQbBg"}},"name":"Voice Labs","desc":"Teach machines how human talks","domain":"demo.gdpr.dev","company":"Voice Labs Inc"},"signature":{"__bytes":"jl-pIUk5o0eQSSY7l4eeokTCx_w3wXPDvItkJKZ3bm5RMc41GBu_Tm8Ywx_SLbcTAHXNmWC8GiGOcp2hr96vBA"}},"legal":{"accept_users_right_access_modify_transfer_delete":true,"automated_decision":false,"automated_surveillance":false,"destination":["Snips Inc","Voxist","Voicelow","Roger Voice"],"email_dpo":"dpo@voicelabs.co","evaluation_notation_rating_profiling":false,"innovative_reasonable_expectations":false,"mixing_reasonable_expectations":false,"storage_duration":"2 years after your Voice Labs account is closed","subprocessors":[],"tos_url":"https://voicelabs.co/tos/","transfer_outside_eea":false,"usage":"(global) Manipulate your Audio recordings lol"},"base":{"consent":[{"scopes":[{"provider":"google","path":"my_activity.assistant"},{"provider":"amazon","path":"alexa"}],"usages":["Train our Speech-to-Text algorithm"]}],"contractual": {"scopes": [{"provider": "google", "path": "my_account.email"}], "usages": ["To keep communication"]}, "legitimate": {"groups": [{"scopes": [{"provider": "google", "path": "my_account.connection_history"}], "usages": ["Detect fraudulent activity"]}], "reason": "For satefy reasons"}}, "network":{"redirectEndpoint": "/cb/"}}
  
      const {userSeed, box} = currentSession();
      const idty = openBox(box, userSeed);
  
      const selfPublicKey = idty.sign.publicKey;
      if (!selfPublicKey) { throw "no sign publicKey set"; }
  
      const url = new URL(window.location.href);
  
      // check contract
            var contract = chain.fromJSON(contractVoicelab);
  
          if (contract.type != 'alias.contract') {
              throw "not a contract";
          }
  
      const hasContractual = contract.base.contractual && contract.base.contractual.scopes.length != 0 && contract.base.contractual.usages.length != 0;
      const hasConsent = contract.base.consent && contract.base.consent.length != 0;
      const hasLegitimate = contract.base.legitimate && contract.base.legitimate.groups.length != 0;
  
      const draftContract = deepcloneJSON(contract);
      for (const consent of draftContract.base.consent) {
          for (const scope of consent.scopes) {
              scope.agree = false;
          }
      }
  
      vue = new Vue({
          el: "#popup",
          data: {
              c: draftContract,
              hasConsent: hasConsent,
              hasContractual: hasContractual,
              hasLegitimate: hasLegitimate,
              showAdvanced: false,
          },
          methods: {
              toggleAdvanced: function() {
                  this.showAdvanced = !this.showAdvanced;
              },
              agree: function() {
                  const consentedScopes = [];
                  for (const consent of this.c.base.consent) {
                      const scopes = [];
                      for (const scope of consent.scopes) {
                          const agreed = scope.agree;
                          scopes.push(agreed);
                      }
                      consentedScopes.push(scopes);
                  }
  
                  const legitimateScopes = [];
                  for (const legitimate of this.c.base.legitimate.groups) {
                      const scopes = [];
                      for (const scope of legitimate.scopes) {
                          // by default, all legitimate are agreed
                          scopes.push(true);
                      }
                      legitimateScopes.push(scopes);
                  }
  
                  let grant = {
                      type: "alias.grant",
                      contract: contract,//chain.fold(contract),
                      revoked: false,
                      base: {
                          contractual: true,
                          consent: consentedScopes,
                          legitimate: legitimateScopes,
                      },
                  };
  
                  grant = chain.sign(idty.sign, grant);
                  console.log("grant:", grant);
  
                  $.ajax({
                      method: 'POST',
                      url: "/api/contract/grant",
                      data: chain.toToken(grant),
                      contentType: "application/json",
                  }).then((r) => {
                      cbReturn(contract, grant, idty.bind);
                  });
              },
              deny: function() {
                  cbReturnError(contract, "access_denied");
              },
          }
      });
  
      $("#popup").show();
  };
</script>
<script type="applicaton/javascript" src="/javascript/index.js"></script>
<!--     <script type="applicaton/javascript" src="/javascripts/webflow.js"></script -->
<!-- [if lte IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif] -->
</body>